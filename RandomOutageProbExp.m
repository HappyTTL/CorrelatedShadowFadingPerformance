%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Simulation of SINR given different densities of Uniformly Distributed   %
% Base Stations. Shadowing field is generated by R file 5000*5000m area   %
% with de-correlation distance 100m                                       %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear all;
clc;
%%%%% Initial set up
alpha = 4;
N0 = -104;
lambda_upper = 1000; %% Maximal density of a 1000*1000 area
lambda_set = [3 5 9 10 15 20 30 40 50 100 200 300 500 1000];
sigma = 8; %% standard deviation of correlated shadow fading
DeCorrDis = 20;
P = 40;


%%%%% load shadowing field  
rng('shuffle')

array_id = getenv('PBS_ARRAYID');
if isempty(array_id)
    array_id = '0';
end

field_id = str2num(array_id);
%matFileName = sprintf('datV00/ShadowField/ExpSF%dDeCorr%d.mat', field_id, DeCorrDis);
%if exist(matFileName, 'file')
%    load(matFileName);
%    shadowField = B;
%else
%    fprintf('File %s does not exist.\n', matFileName);
%end
for j = 1:length(lambda_set)
    lambda = lambda_set(j);
    sample_size = 10000; %% 100 BS layout for a particular Shadowing field
    NB_SINR = zeros(sample_size,1);
    NB_SIR = zeros(sample_size,1);
    max_SINR = zeros(sample_size,1);
    max_SIR = zeros(sample_size,1);
    max_SINR_index = zeros(sample_size,1);
    max_SIR_index = zeros(sample_size,1);
    max_power = zeros(sample_size,1);
    max_interference = zeros(sample_size,1);
    max_power_index = zeros(sample_size,1);
    max_interference_index = zeros(sample_size,1);
    r = sqrt(lambda_upper/lambda*1000*1000);
    disp(lambda);
    count = 0;
    for n = 1:sample_size
        %%%%%%Generate to PPP base station Layout%%%%%%%


        %         BaseStationPoints = poissrnd(Lambda);
        %         if BaseStationPoints == 0
        %             disp('No BaseStations');
        %
        %             continue;
        %         end
        %
        %         %BaseStationPoints2 = poissrnd(BaseStationLambda2);
        %         BaseStationPoissonProc = rand(BaseStationPoints, 2).*r;
        %         BaseStationPosition = BaseStationPoissonProc-r/2;
        %%%%%Generate random Base Stations%%%%%%%%%%%
        BS_points = lambda_upper;
        BS_position_X = rand(lambda_upper,1).*r;
        BS_position_Y = rand(lambda_upper,1).*r;
        BS_position = [BS_position_X-r/2 BS_position_Y-r/2];

        %             figure(1);
        %             plot(BaseStationPosition(:, 1), BaseStationPosition(:, 2), '.');
        %             %axis([0 1000 0 1000]);
        %             %     hold on;
        %             %     plot(BaseStationPoissonProc2(:, 1), BaseStationPoissonProc2(:, 2), '*');
        %                  axis([-500 500 -500 500]);
        %             hold on;
        %             voronoi(BaseStationPosition(:, 1), BaseStationPosition(:, 2));
        %         filename = ['BSPosition' num2str(n) '.mat'];
        %         save(filename, 'BaseStationPosition');

        MU = [0 0];
        N = size(BS_position);
        dis_BStoMU = zeros(N(1),1);
        %%%%%%%%%%%calculate pathloss
        PL = zeros(N(1),1);
        PL_DB = zeros(N(1),1);
        for i = 1 : N(1)
            dis_BStoMU(i) = sqrt(BS_position(i,1)^2 + BS_position(i,2)^2);
            PL(i) = (dis_BStoMU(i)+1)^(-alpha);
            PL_DB(i) = 10*log10(PL(i));
        end
        [NB_Dis,NB] = min(dis_BStoMU);

        %%%%%%%%%%calculate shadow fading%%%%%%%%%%%%%
        shadowing_DB = zeros(N(1),1);
        shadowing = zeros(N(1),1);

        for i = 1 : N(1)
           % if sqrt(round(BS_position(i,1))^2 + round(BS_position(i,2))^2) >= 2500
                shadowing_DB(i) = normrnd(0, sigma);
           % else
           %     shadowing_DB(i) = B(round(BS_position(i,1))+2500, round(BS_position(i,2))+2500)*sigma;
           % end
            shadowing(i) = 10^(shadowing_DB(i)/10);
        end

        %%%%%%%%%%calculate Rayleigh fading %%%%%%%%
        rayleigh_DB = zeros(N(1),1);
        rayleigh = zeros(N(1),1);
        for i = 1 : N(1)
            x = sqrt(1/2).*randn(1);
            y = sqrt(1/2).*randn(1);
            rayleigh(i) = x.^2 + y.^2;
            rayleigh_DB(i) = 10*log10(rayleigh(i));
        end


        RxPower = zeros(N(1),1);
        RxPower_DB = zeros(N(1),1);
        for i = 1 : N(1)
            %             RxPower(i) = 10^(P0/10) * 0.001 * PL(i) * Shadowing(i) * Rayleigh(i);
            RxPower(i) = 10^(P/10) * 0.001 * PL(i) * shadowing(i);
            RxPower_DB = 10*log10(RxPower);
        end

        SINR = zeros(N(1),1);
        SIR = zeros(N(1),1);
        SINR_DB = zeros(N(1),1);
        SIR_DB = zeros(N(1),1);
        interference = zeros(N(1),1);
        interference_DB = zeros(N(1),1);

        for i = 1 : N(1)
            SINR(i) = RxPower(i)/(sum(RxPower)-RxPower(i)+10^(N0/10));
            SIR(i) = RxPower(i)/(sum(RxPower)-RxPower(i));
            interference(i) = sum(RxPower)-RxPower(i);
            SINR_DB(i) = 10*log10(SINR(i));
            SIR_DB(i) = 10*log10(SIR(i));
            interference_DB(i) = 10*log10(sum(RxPower)-RxPower(i));
        end
        [max_SINR(n), max_SINR_index(n)] = max(SINR_DB);
        [max_SIR(n), max_SIR_index(n)] = max(SIR_DB);
        [max_power(n), max_power_index(n)] = max(RxPower_DB);
        [max_interference(n), max_interference_index(n)] = max(interference_DB);
        NB_SINR(n) = SINR_DB(NB);
        NB_SIR(n) = SIR_DB(NB);
    end
    filename = ['datV00/MaxSINR/Max_SINR_Tx' num2str(P) 'BS' num2str(lambda) 'Exp' num2str(DeCorrDis) 'ID' num2str(field_id) '.mat'];
    save(filename, 'max_SINR');
    filename = ['datV00/MaxSIR/Max_SIR_Tx' num2str(P) 'BS' num2str(lambda) 'Exp' num2str(DeCorrDis) 'ID' num2str(field_id) '.mat'];
    save(filename, 'max_SIR');
    filename = ['datV00/NBSINR/Max_SINR_Tx' num2str(P) 'BS' num2str(lambda) 'Exp' num2str(DeCorrDis) 'ID' num2str(field_id) '.mat'];
    save(filename, 'NB_SINR');
    filename = ['datV00/NBSIR/Max_SIR_Tx' num2str(P) 'BS' num2str(lambda) 'Exp' num2str(DeCorrDis) 'ID' num2str(field_id) '.mat'];
    save(filename, 'NB_SIR');
%     figure(1);
%     cdfplot(Max_SINR);
%     hold on;
%     figure(2);
%     cdfplot(Max_SIR);
%     hold on;
%     Max_SINR(find(Max_SINR >= SINRthreshold)) = 1;
%     Max_SINR(find(Max_SINR < SINRthreshold)) = 0;
%     Max_SIR(find(Max_SINR >= SINRthreshold)) = 1;
%     Max_SIR(find(Max_SINR < SINRthreshold)) = 0;
%     filename = ['dat/Tx30Max_SINR_Outage_RandomExp100_01' num2str(Lambda) 'ID' num2str(FieldId) '.mat'];
%     save(filename, 'Max_SINR');
%     filename = ['dat/Tx30Max_SIR_Outage_RandomExp100_01' num2str(Lambda) 'ID' num2str(FieldId) '.mat'];
%     save(filename, 'Max_SIR');

end
